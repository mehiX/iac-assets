image: golang:latest

stages:
  - test
  - build
  - deploy

variables:
  REGISTRY_SERVER_AZ1: harbor.cicd-p-az1.l12m.nl
  REGISTRY_SERVER_AZ2: harbor.cicd-p-az2.l12m.nl
  REGISTRY_PROJECT: "dgp"
  IMAGE_NAME: "iac-assets" 
  NAMESPACE: "launchpads"

format:
  stage: test
  script:
    - go fmt $(go list ./... | grep -v /vendor/)
    - go vet $(go list ./... | grep -v /vendor/)
    - go test -race $(go list ./... | grep -v /vendor/)

compile:
  stage: build
  script:
    - mkdir -p dist
    - go build -o dist/iac ./main.go
  artifacts:
    paths:
      - dist

.deploy:
  image: safenetlabs/k8s-cicd:1.0.11-22
  stage: deploy
  script: 
    - |
      kubectl get ns ${NAMESPACE} || kubectl create -f - <<EOF
      apiVersion: v1
      kind: Namespace
      metadata:
        annotations:
          field.cattle.io/projectId: $(kubectl get ns dgp-ot-services -o jsonpath='{.metadata.annotations.field\.cattle\.io\/projectId}')
          field.cattle.io/resourceQuota: '{"limit":{"limitsCpu":"200m","limitsMemory":"2000Mi","requestsCpu":"150m","requestsMemory":"41000Mi","requestsStorage":"1Gi"}}'
        name: ${S3_NAMESPACE}
      EOF

deploy-ot1:
  variables:
    DOMAIN: ot-t-az1.l12m.nl
    HARBOR_REPLICA_REGISTRY: $REGISTRY_SERVER_AZ1
    DATA_CENTER_SUFFIX: az1
  environment: ot-t-az1.dgp-ot
  extends: 
    - .deploy 

deploy-ot2:
  variables:
    DOMAIN: ot-t-az2.l12m.nl
    HARBOR_REPLICA_REGISTRY: $REGISTRY_SERVER_AZ2
    DATA_CENTER_SUFFIX: az2
  environment: ot-t-az2.dgp-ot
  extends: 
    - .deploy 